{
	"info": {
		"_postman_id": "87b4dbf4-e6f3-491e-a1dc-40483f87b595",
		"name": "JXMarket",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "添加商品1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "76bec140-97a2-4f2e-aedf-d5272d28193a",
						"type": "text/javascript",
						"exec": [
							"",
							"",
							"pm.test(\"测试商品名是否正确\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"P1\");",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\" : \"P1\",\n\t\"description\" : \"P1d\",\n\t\"price\" : 11\n}"
				},
				"url": {
					"raw": "localhost:8083/products",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"products"
					]
				},
				"description": "添加第一件商品"
			},
			"response": []
		},
		{
			"name": "添加商品2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b01b1a45-8a75-4bed-bdbb-cfc4e10a9f73",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"测试商品价格是否正确\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.price).to.eql(12);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\" : \"P2\",\n\t\"description\" : \"P2d\",\n\t\"price\" : 12\n}"
				},
				"url": {
					"raw": "localhost:8083/products",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"products"
					]
				},
				"description": "添加第二件商品"
			},
			"response": []
		},
		{
			"name": "修改商品1的库存",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8b8534fc-9956-41fb-9018-94ce39a7d714",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"测试商品id和库存id是否相同\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(jsonData.productId);",
							"});",
							"",
							"pm.test(\"测试库存是否修改成功\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.productNumber).to.eql(10);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:8083/inventories/1/10",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"inventories",
						"1",
						"10"
					]
				}
			},
			"response": []
		},
		{
			"name": "修改商品2的库存",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ac824b73-afed-4a6f-889b-53be1c68a75c",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"测试商品id和库存id是否相同\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(jsonData.productId);",
							"});",
							"",
							"pm.test(\"测试库存是否修改成功\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.productNumber).to.eql(10);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:8083/inventories/2/10",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"inventories",
						"2",
						"10"
					]
				}
			},
			"response": []
		},
		{
			"name": "创建订单1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1f02e65d-3a20-4d62-b30e-ad2e47512d45",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"返回创建成功字符串\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"create order success\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n\t{\n\t\t\"productId\" : 1,\n\t\t\"purchaseCount\" : 5\n\t},{\n\t\t\"productId\" : 2,\n\t\t\"purchaseCount\" : 4\n\t}\n]"
				},
				"url": {
					"raw": "localhost:8083/orders",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "查询创建且未付款订单信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "66ff7f40-5a86-4ee6-afd4-198ec6d650d9",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"测试是否有订单1\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(1);",
							"});",
							"",
							"pm.test(\"测试当前订单状态是否为未付款\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.orderStatus).to.eql(\"unpaid\");",
							"});",
							"",
							"pm.test(\"测试订单总价是否为103\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.totalPrice).to.eql(103);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "localhost:8083/orders/1",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"orders",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "查询不存在的订单",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c8dfd539-f00c-4d52-af62-4bc4caf48328",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"测试不存在的订单\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"could not find object which id = 2.\");",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "localhost:8083/orders/2",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"orders",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "查询下订单之后商品1的库存",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0669d033-19ed-454e-a1e0-d39840d1634a",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"测试未付款时库存\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.productNumber).to.eql(10);",
							"});",
							"",
							"pm.test(\"测试未签收时锁定库存\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.productLockNumber).to.eql(5);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "localhost:8083/inventories/1",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"inventories",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "查询下订单后商品2的库存",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "202624c8-cb8a-40f8-b6ea-d7be8b38e56a",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"测试未付款时库存\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.productNumber).to.eql(10);",
							"});",
							"",
							"pm.test(\"测试未签收时锁定库存\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.productLockNumber).to.eql(4);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "localhost:8083/inventories/2",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"inventories",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "修改订单状态为支付",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "786b233a-a577-4e23-b70b-17d9e7e8a8b1",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"返回支付成功字符串\", function () {",
							"    pm.response.to.have.body(\"pay order success, create deliveryInfo success\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:8083/orders/1/paid",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"orders",
						"1",
						"paid"
					]
				}
			},
			"response": []
		},
		{
			"name": "撤销已经付款的订单",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8d7a1301-6937-407c-bce4-c4e4ada79835",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"返回撤销失败及原因的字符串\", function () {",
							"    pm.response.to.have.body(\"order cannot withdraw because status is paid\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:8083/orders/1/withdraw",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"orders",
						"1",
						"withdraw"
					]
				}
			},
			"response": []
		},
		{
			"name": "查询订单支付之后创建的配送单信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dd5003f2-c4a4-4632-864d-20f133d151f9",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"支付成功后创建配送单\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(1);",
							"});",
							"",
							"pm.test(\"配送单和订单号一一对应\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(jsonData.orderId);",
							"});",
							"",
							"pm.test(\"刚支付成功配送单状态为创建\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.deliveryStatus).to.eql(\"create\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "localhost:8083//deliveryInfos/1",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"",
						"deliveryInfos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "为已经支付过的账单重复支付",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4f137800-796f-4899-b13d-b6db04534370",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"返回支付失败及原因的字符串\", function () {",
							"    pm.response.to.have.body(\"order cannot pay because status is paid\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:8083/orders/1/paid",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"orders",
						"1",
						"paid"
					]
				}
			},
			"response": []
		},
		{
			"name": "修改配送单状态为出库",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9271e426-4995-44ad-a713-c2c90b6bdc47",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"返回出库成功字符串\", function () {",
							"    pm.response.to.have.body(\"outbound delivery success\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {},
				"url": {
					"raw": "localhost:8083/deliveryInfos/1/outbound",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"deliveryInfos",
						"1",
						"outbound"
					]
				}
			},
			"response": []
		},
		{
			"name": "重复修改配送单状态为出库",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5d89f298-ddb9-4401-bc49-2db673daf476",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"返回出库失败及原因的字符串\", function () {",
							"    pm.response.to.have.body(\"outbound delivery fail because status is outbound\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {},
				"url": {
					"raw": "localhost:8083/deliveryInfos/1/outbound",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"deliveryInfos",
						"1",
						"outbound"
					]
				}
			},
			"response": []
		},
		{
			"name": "签收订单",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f49bdb67-e109-4151-beb6-338cdfc47538",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"返回签收成功字符串\", function () {",
							"    pm.response.to.have.body(\"sign order success , sign deliveryInfo success , update inventory success when order signed\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:8083/orders/1/signed",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"orders",
						"1",
						"signed"
					]
				}
			},
			"response": []
		},
		{
			"name": "重复签收订单",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c54d80c-7538-4b32-b8f8-60101180c81b",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"返回签收失败及原因字符串\", function () {",
							"    pm.response.to.have.body(\"order cannot sign because order status is signed\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:8083/orders/1/signed",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"orders",
						"1",
						"signed"
					]
				}
			},
			"response": []
		},
		{
			"name": "签收成功后的库存变化",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7b5aa0af-91cb-487f-af15-6d2705228d87",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"牵手成功后商品1的实际库存\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.productNumber).to.eql(5);",
							"});",
							"",
							"pm.test(\"签收成功后商品1的锁定库存\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.productLockNumber).to.eql(0);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "localhost:8083/inventories/1",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"inventories",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "创建订单2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1f02e65d-3a20-4d62-b30e-ad2e47512d45",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"返回创建成功字符串\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"create order success\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n\t{\n\t\t\"productId\" : 1,\n\t\t\"purchaseCount\" : 5\n\t},{\n\t\t\"productId\" : 2,\n\t\t\"purchaseCount\" : 4\n\t}\n]"
				},
				"url": {
					"raw": "localhost:8083/orders",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "创建订单3库存不够失败",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fa4d62ab-f395-4694-9e37-bcb6024ef640",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"返回创建失败原因字符串\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"not enough for product 1\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n\t{\n\t\t\"productId\" : 1,\n\t\t\"purchaseCount\" : 5\n\t},{\n\t\t\"productId\" : 2,\n\t\t\"purchaseCount\" : 4\n\t}\n]"
				},
				"url": {
					"raw": "localhost:8083/orders",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "撤销订单2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "341081f0-3c24-414b-94fc-4071ed947d2b",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"返回撤销成功字符串\", function () {",
							"    pm.response.to.have.body(\"withdraw order success , update inventory success when order withdraw\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:8083/orders/2/withdraw",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"orders",
						"2",
						"withdraw"
					]
				}
			},
			"response": []
		},
		{
			"name": "查询撤销订单2之后库存信息",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e25d9d2b-b407-4cc8-bcb2-fab886c2e02e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"商品1库存实际数量\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.productNumber).to.eql(5);",
							"});",
							"",
							"pm.test(\"商品1锁定库存数量\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.productLockNumber).to.eql(0);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:8083/inventories/1",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"inventories",
						"1"
					]
				}
			},
			"response": []
		}
	]
}